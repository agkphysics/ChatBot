//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.30 at 05:39:42 PM NZDT 
//


package talkbank.schema;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for roleType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="roleType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Target_Child"/>
 *     &lt;enumeration value="Target_Adult"/>
 *     &lt;enumeration value="Child"/>
 *     &lt;enumeration value="Mother"/>
 *     &lt;enumeration value="Father"/>
 *     &lt;enumeration value="Brother"/>
 *     &lt;enumeration value="Sister"/>
 *     &lt;enumeration value="Sibling"/>
 *     &lt;enumeration value="Grandmother"/>
 *     &lt;enumeration value="Grandfather"/>
 *     &lt;enumeration value="Aunt"/>
 *     &lt;enumeration value="Uncle"/>
 *     &lt;enumeration value="Cousin"/>
 *     &lt;enumeration value="Family_Friend"/>
 *     &lt;enumeration value="Student"/>
 *     &lt;enumeration value="Teacher"/>
 *     &lt;enumeration value="Playmate"/>
 *     &lt;enumeration value="Visitor"/>
 *     &lt;enumeration value="Babysitter"/>
 *     &lt;enumeration value="Caretaker"/>
 *     &lt;enumeration value="Housekeeper"/>
 *     &lt;enumeration value="Investigator"/>
 *     &lt;enumeration value="Observer"/>
 *     &lt;enumeration value="Clinician"/>
 *     &lt;enumeration value="Therapist"/>
 *     &lt;enumeration value="Interviewer"/>
 *     &lt;enumeration value="Informant"/>
 *     &lt;enumeration value="Participant"/>
 *     &lt;enumeration value="Subject"/>
 *     &lt;enumeration value="Partner"/>
 *     &lt;enumeration value="Doctor"/>
 *     &lt;enumeration value="Nurse"/>
 *     &lt;enumeration value="Patient"/>
 *     &lt;enumeration value="Unidentified"/>
 *     &lt;enumeration value="Uncertain"/>
 *     &lt;enumeration value="Camera_Operator"/>
 *     &lt;enumeration value="Group"/>
 *     &lt;enumeration value="Narrator"/>
 *     &lt;enumeration value="Adult"/>
 *     &lt;enumeration value="Teenager"/>
 *     &lt;enumeration value="Boy"/>
 *     &lt;enumeration value="Girl"/>
 *     &lt;enumeration value="Male"/>
 *     &lt;enumeration value="Female"/>
 *     &lt;enumeration value="Non_Human"/>
 *     &lt;enumeration value="Toy"/>
 *     &lt;enumeration value="Media"/>
 *     &lt;enumeration value="Environment"/>
 *     &lt;enumeration value="OffScript"/>
 *     &lt;enumeration value="Text"/>
 *     &lt;enumeration value="PlayRole"/>
 *     &lt;enumeration value="Justice"/>
 *     &lt;enumeration value="Judge"/>
 *     &lt;enumeration value="Attorney"/>
 *     &lt;enumeration value="Speaker"/>
 *     &lt;enumeration value="ShowHost"/>
 *     &lt;enumeration value="ShowGuest"/>
 *     &lt;enumeration value="Operator"/>
 *     &lt;enumeration value="Caller"/>
 *     &lt;enumeration value="CallTaker"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "roleType")
@XmlEnum
public enum RoleType {

    @XmlEnumValue("Target_Child")
    TARGET_CHILD("Target_Child"),
    @XmlEnumValue("Target_Adult")
    TARGET_ADULT("Target_Adult"),
    @XmlEnumValue("Child")
    CHILD("Child"),
    @XmlEnumValue("Mother")
    MOTHER("Mother"),
    @XmlEnumValue("Father")
    FATHER("Father"),
    @XmlEnumValue("Brother")
    BROTHER("Brother"),
    @XmlEnumValue("Sister")
    SISTER("Sister"),
    @XmlEnumValue("Sibling")
    SIBLING("Sibling"),
    @XmlEnumValue("Grandmother")
    GRANDMOTHER("Grandmother"),
    @XmlEnumValue("Grandfather")
    GRANDFATHER("Grandfather"),
    @XmlEnumValue("Aunt")
    AUNT("Aunt"),
    @XmlEnumValue("Uncle")
    UNCLE("Uncle"),
    @XmlEnumValue("Cousin")
    COUSIN("Cousin"),
    @XmlEnumValue("Family_Friend")
    FAMILY_FRIEND("Family_Friend"),
    @XmlEnumValue("Student")
    STUDENT("Student"),
    @XmlEnumValue("Teacher")
    TEACHER("Teacher"),
    @XmlEnumValue("Playmate")
    PLAYMATE("Playmate"),
    @XmlEnumValue("Visitor")
    VISITOR("Visitor"),
    @XmlEnumValue("Babysitter")
    BABYSITTER("Babysitter"),
    @XmlEnumValue("Caretaker")
    CARETAKER("Caretaker"),
    @XmlEnumValue("Housekeeper")
    HOUSEKEEPER("Housekeeper"),
    @XmlEnumValue("Investigator")
    INVESTIGATOR("Investigator"),
    @XmlEnumValue("Observer")
    OBSERVER("Observer"),
    @XmlEnumValue("Clinician")
    CLINICIAN("Clinician"),
    @XmlEnumValue("Therapist")
    THERAPIST("Therapist"),
    @XmlEnumValue("Interviewer")
    INTERVIEWER("Interviewer"),
    @XmlEnumValue("Informant")
    INFORMANT("Informant"),
    @XmlEnumValue("Participant")
    PARTICIPANT("Participant"),
    @XmlEnumValue("Subject")
    SUBJECT("Subject"),
    @XmlEnumValue("Partner")
    PARTNER("Partner"),
    @XmlEnumValue("Doctor")
    DOCTOR("Doctor"),
    @XmlEnumValue("Nurse")
    NURSE("Nurse"),
    @XmlEnumValue("Patient")
    PATIENT("Patient"),
    @XmlEnumValue("Unidentified")
    UNIDENTIFIED("Unidentified"),
    @XmlEnumValue("Uncertain")
    UNCERTAIN("Uncertain"),
    @XmlEnumValue("Camera_Operator")
    CAMERA_OPERATOR("Camera_Operator"),
    @XmlEnumValue("Group")
    GROUP("Group"),
    @XmlEnumValue("Narrator")
    NARRATOR("Narrator"),
    @XmlEnumValue("Adult")
    ADULT("Adult"),
    @XmlEnumValue("Teenager")
    TEENAGER("Teenager"),
    @XmlEnumValue("Boy")
    BOY("Boy"),
    @XmlEnumValue("Girl")
    GIRL("Girl"),
    @XmlEnumValue("Male")
    MALE("Male"),
    @XmlEnumValue("Female")
    FEMALE("Female"),
    @XmlEnumValue("Non_Human")
    NON_HUMAN("Non_Human"),
    @XmlEnumValue("Toy")
    TOY("Toy"),
    @XmlEnumValue("Media")
    MEDIA("Media"),
    @XmlEnumValue("Environment")
    ENVIRONMENT("Environment"),
    @XmlEnumValue("OffScript")
    OFF_SCRIPT("OffScript"),
    @XmlEnumValue("Text")
    TEXT("Text"),
    @XmlEnumValue("PlayRole")
    PLAY_ROLE("PlayRole"),
    @XmlEnumValue("Justice")
    JUSTICE("Justice"),
    @XmlEnumValue("Judge")
    JUDGE("Judge"),
    @XmlEnumValue("Attorney")
    ATTORNEY("Attorney"),
    @XmlEnumValue("Speaker")
    SPEAKER("Speaker"),
    @XmlEnumValue("ShowHost")
    SHOW_HOST("ShowHost"),
    @XmlEnumValue("ShowGuest")
    SHOW_GUEST("ShowGuest"),
    @XmlEnumValue("Operator")
    OPERATOR("Operator"),
    @XmlEnumValue("Caller")
    CALLER("Caller"),
    @XmlEnumValue("CallTaker")
    CALL_TAKER("CallTaker");
    private final String value;

    RoleType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RoleType fromValue(String v) {
        for (RoleType c: RoleType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
